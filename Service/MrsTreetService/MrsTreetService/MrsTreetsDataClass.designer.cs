#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MrsTreetService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class MrsTreetsDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertBRIDGE(BRIDGE instance);
    partial void UpdateBRIDGE(BRIDGE instance);
    partial void DeleteBRIDGE(BRIDGE instance);
    partial void InsertBUSINESS(BUSINESS instance);
    partial void UpdateBUSINESS(BUSINESS instance);
    partial void DeleteBUSINESS(BUSINESS instance);
    partial void InsertCART(CART instance);
    partial void UpdateCART(CART instance);
    partial void DeleteCART(CART instance);
    partial void InsertINVOICE(INVOICE instance);
    partial void UpdateINVOICE(INVOICE instance);
    partial void DeleteINVOICE(INVOICE instance);
    partial void InsertOPERATING_HOUR(OPERATING_HOUR instance);
    partial void UpdateOPERATING_HOUR(OPERATING_HOUR instance);
    partial void DeleteOPERATING_HOUR(OPERATING_HOUR instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertDISCOUNT(DISCOUNT instance);
    partial void UpdateDISCOUNT(DISCOUNT instance);
    partial void DeleteDISCOUNT(DISCOUNT instance);
    partial void InsertORDERITEM(ORDERITEM instance);
    partial void UpdateORDERITEM(ORDERITEM instance);
    partial void DeleteORDERITEM(ORDERITEM instance);
    #endregion
		
		public MrsTreetsDataClassDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MrsTreetsDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MrsTreetsDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MrsTreetsDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MrsTreetsDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<BRIDGE> BRIDGEs
		{
			get
			{
				return this.GetTable<BRIDGE>();
			}
		}
		
		public System.Data.Linq.Table<BUSINESS> BUSINESSes
		{
			get
			{
				return this.GetTable<BUSINESS>();
			}
		}
		
		public System.Data.Linq.Table<CART> CARTs
		{
			get
			{
				return this.GetTable<CART>();
			}
		}
		
		public System.Data.Linq.Table<INVOICE> INVOICEs
		{
			get
			{
				return this.GetTable<INVOICE>();
			}
		}
		
		public System.Data.Linq.Table<OPERATING_HOUR> OPERATING_HOURs
		{
			get
			{
				return this.GetTable<OPERATING_HOUR>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<DISCOUNT> DISCOUNTs
		{
			get
			{
				return this.GetTable<DISCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<ORDERITEM> ORDERITEMs
		{
			get
			{
				return this.GetTable<ORDERITEM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FISRT_NAME;
		
		private string _LAST_NAME;
		
		private string _EMAIL;
		
		private string _PASSWORD;
		
		private string _CELL_NUMBER;
		
		private System.DateTime _DATE_OF_BIRTH;
		
		private string _GENDER;
		
		private string _TYPE_OF;
		
		private System.DateTime _REGISTER_DATE;
		
		private bool _ISACTIVE;
		
		private EntitySet<BUSINESS> _BUSINESSes;
		
		private EntitySet<CART> _CARTs;
		
		private EntitySet<INVOICE> _INVOICEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFISRT_NAMEChanging(string value);
    partial void OnFISRT_NAMEChanged();
    partial void OnLAST_NAMEChanging(string value);
    partial void OnLAST_NAMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnCELL_NUMBERChanging(string value);
    partial void OnCELL_NUMBERChanged();
    partial void OnDATE_OF_BIRTHChanging(System.DateTime value);
    partial void OnDATE_OF_BIRTHChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnTYPE_OFChanging(string value);
    partial void OnTYPE_OFChanged();
    partial void OnREGISTER_DATEChanging(System.DateTime value);
    partial void OnREGISTER_DATEChanged();
    partial void OnISACTIVEChanging(bool value);
    partial void OnISACTIVEChanged();
    #endregion
		
		public USER()
		{
			this._BUSINESSes = new EntitySet<BUSINESS>(new Action<BUSINESS>(this.attach_BUSINESSes), new Action<BUSINESS>(this.detach_BUSINESSes));
			this._CARTs = new EntitySet<CART>(new Action<CART>(this.attach_CARTs), new Action<CART>(this.detach_CARTs));
			this._INVOICEs = new EntitySet<INVOICE>(new Action<INVOICE>(this.attach_INVOICEs), new Action<INVOICE>(this.detach_INVOICEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FISRT NAME]", Storage="_FISRT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FISRT_NAME
		{
			get
			{
				return this._FISRT_NAME;
			}
			set
			{
				if ((this._FISRT_NAME != value))
				{
					this.OnFISRT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FISRT_NAME = value;
					this.SendPropertyChanged("FISRT_NAME");
					this.OnFISRT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[LAST NAME]", Storage="_LAST_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LAST_NAME
		{
			get
			{
				return this._LAST_NAME;
			}
			set
			{
				if ((this._LAST_NAME != value))
				{
					this.OnLAST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LAST_NAME = value;
					this.SendPropertyChanged("LAST_NAME");
					this.OnLAST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CELL NUMBER]", Storage="_CELL_NUMBER", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CELL_NUMBER
		{
			get
			{
				return this._CELL_NUMBER;
			}
			set
			{
				if ((this._CELL_NUMBER != value))
				{
					this.OnCELL_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._CELL_NUMBER = value;
					this.SendPropertyChanged("CELL_NUMBER");
					this.OnCELL_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[DATE OF BIRTH]", Storage="_DATE_OF_BIRTH", DbType="Date NOT NULL")]
		public System.DateTime DATE_OF_BIRTH
		{
			get
			{
				return this._DATE_OF_BIRTH;
			}
			set
			{
				if ((this._DATE_OF_BIRTH != value))
				{
					this.OnDATE_OF_BIRTHChanging(value);
					this.SendPropertyChanging();
					this._DATE_OF_BIRTH = value;
					this.SendPropertyChanged("DATE_OF_BIRTH");
					this.OnDATE_OF_BIRTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(18)")]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[TYPE OF]", Storage="_TYPE_OF", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TYPE_OF
		{
			get
			{
				return this._TYPE_OF;
			}
			set
			{
				if ((this._TYPE_OF != value))
				{
					this.OnTYPE_OFChanging(value);
					this.SendPropertyChanging();
					this._TYPE_OF = value;
					this.SendPropertyChanged("TYPE_OF");
					this.OnTYPE_OFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[REGISTER DATE]", Storage="_REGISTER_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime REGISTER_DATE
		{
			get
			{
				return this._REGISTER_DATE;
			}
			set
			{
				if ((this._REGISTER_DATE != value))
				{
					this.OnREGISTER_DATEChanging(value);
					this.SendPropertyChanging();
					this._REGISTER_DATE = value;
					this.SendPropertyChanged("REGISTER_DATE");
					this.OnREGISTER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISACTIVE", DbType="Bit NOT NULL")]
		public bool ISACTIVE
		{
			get
			{
				return this._ISACTIVE;
			}
			set
			{
				if ((this._ISACTIVE != value))
				{
					this.OnISACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ISACTIVE = value;
					this.SendPropertyChanged("ISACTIVE");
					this.OnISACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_BUSINESS", Storage="_BUSINESSes", ThisKey="ID", OtherKey="OWNER_ID")]
		public EntitySet<BUSINESS> BUSINESSes
		{
			get
			{
				return this._BUSINESSes;
			}
			set
			{
				this._BUSINESSes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_CART", Storage="_CARTs", ThisKey="ID", OtherKey="USER_ID")]
		public EntitySet<CART> CARTs
		{
			get
			{
				return this._CARTs;
			}
			set
			{
				this._CARTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_INVOICE", Storage="_INVOICEs", ThisKey="ID", OtherKey="USER_ID")]
		public EntitySet<INVOICE> INVOICEs
		{
			get
			{
				return this._INVOICEs;
			}
			set
			{
				this._INVOICEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUSINESSes(BUSINESS entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_BUSINESSes(BUSINESS entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BRIDGE")]
	public partial class BRIDGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CART_ID;
		
		private int _PRODUCT_ID;
		
		private int _QUANTITY;
		
		private decimal _PRICE;
		
		private EntityRef<CART> _CART;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCART_IDChanging(int value);
    partial void OnCART_IDChanged();
    partial void OnPRODUCT_IDChanging(int value);
    partial void OnPRODUCT_IDChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    partial void OnPRICEChanging(decimal value);
    partial void OnPRICEChanged();
    #endregion
		
		public BRIDGE()
		{
			this._CART = default(EntityRef<CART>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CART ID]", Storage="_CART_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CART_ID
		{
			get
			{
				return this._CART_ID;
			}
			set
			{
				if ((this._CART_ID != value))
				{
					this.OnCART_IDChanging(value);
					this.SendPropertyChanging();
					this._CART_ID = value;
					this.SendPropertyChanged("CART_ID");
					this.OnCART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PRODUCT ID]", Storage="_PRODUCT_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PRODUCT_ID
		{
			get
			{
				return this._PRODUCT_ID;
			}
			set
			{
				if ((this._PRODUCT_ID != value))
				{
					this.OnPRODUCT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ID = value;
					this.SendPropertyChanged("PRODUCT_ID");
					this.OnPRODUCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Money NOT NULL")]
		public decimal PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CART_BRIDGE", Storage="_CART", ThisKey="CART_ID", OtherKey="ID", IsForeignKey=true)]
		public CART CART
		{
			get
			{
				return this._CART.Entity;
			}
			set
			{
				CART previousValue = this._CART.Entity;
				if (((previousValue != value) 
							|| (this._CART.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CART.Entity = null;
						previousValue.BRIDGEs.Remove(this);
					}
					this._CART.Entity = value;
					if ((value != null))
					{
						value.BRIDGEs.Add(this);
						this._CART_ID = value.ID;
					}
					else
					{
						this._CART_ID = default(int);
					}
					this.SendPropertyChanged("CART");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_BRIDGE", Storage="_PRODUCT", ThisKey="PRODUCT_ID", OtherKey="ID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.BRIDGEs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.BRIDGEs.Add(this);
						this._PRODUCT_ID = value.ID;
					}
					else
					{
						this._PRODUCT_ID = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUSINESS")]
	public partial class BUSINESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OWNER_ID;
		
		private string _NAME;
		
		private string _ADDRESS;
		
		private string _IMAGE;
		
		private string _DESCRIPTION;
		
		private bool _ISACTIVE;
		
		private EntitySet<OPERATING_HOUR> _OPERATING_HOURs;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOWNER_IDChanging(int value);
    partial void OnOWNER_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnIMAGEChanging(string value);
    partial void OnIMAGEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnISACTIVEChanging(bool value);
    partial void OnISACTIVEChanged();
    #endregion
		
		public BUSINESS()
		{
			this._OPERATING_HOURs = new EntitySet<OPERATING_HOUR>(new Action<OPERATING_HOUR>(this.attach_OPERATING_HOURs), new Action<OPERATING_HOUR>(this.detach_OPERATING_HOURs));
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[OWNER ID]", Storage="_OWNER_ID", DbType="Int NOT NULL")]
		public int OWNER_ID
		{
			get
			{
				return this._OWNER_ID;
			}
			set
			{
				if ((this._OWNER_ID != value))
				{
					this.OnOWNER_IDChanging(value);
					this.SendPropertyChanging();
					this._OWNER_ID = value;
					this.SendPropertyChanged("OWNER_ID");
					this.OnOWNER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string IMAGE
		{
			get
			{
				return this._IMAGE;
			}
			set
			{
				if ((this._IMAGE != value))
				{
					this.OnIMAGEChanging(value);
					this.SendPropertyChanging();
					this._IMAGE = value;
					this.SendPropertyChanged("IMAGE");
					this.OnIMAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISACTIVE", DbType="Bit NOT NULL")]
		public bool ISACTIVE
		{
			get
			{
				return this._ISACTIVE;
			}
			set
			{
				if ((this._ISACTIVE != value))
				{
					this.OnISACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ISACTIVE = value;
					this.SendPropertyChanged("ISACTIVE");
					this.OnISACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUSINESS_OPERATING_HOUR", Storage="_OPERATING_HOURs", ThisKey="ID", OtherKey="BUSINESS_ID")]
		public EntitySet<OPERATING_HOUR> OPERATING_HOURs
		{
			get
			{
				return this._OPERATING_HOURs;
			}
			set
			{
				this._OPERATING_HOURs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUSINESS_PRODUCT", Storage="_PRODUCTs", ThisKey="ID", OtherKey="BUSINESS_ID")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_BUSINESS", Storage="_USER", ThisKey="OWNER_ID", OtherKey="ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.BUSINESSes.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.BUSINESSes.Add(this);
						this._OWNER_ID = value.ID;
					}
					else
					{
						this._OWNER_ID = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPERATING_HOURs(OPERATING_HOUR entity)
		{
			this.SendPropertyChanging();
			entity.BUSINESS = this;
		}
		
		private void detach_OPERATING_HOURs(OPERATING_HOUR entity)
		{
			this.SendPropertyChanging();
			entity.BUSINESS = null;
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.BUSINESS = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.BUSINESS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CART")]
	public partial class CART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _USER_ID;
		
		private decimal _PROD_SUBTOTAL;
		
		private decimal _SERVICES_SUBTOTAL;
		
		private decimal _TAX;
		
		private decimal _TOTAL;
		
		private decimal _DISCOUNT;
		
		private decimal _TOTAL_PAID;
		
		private int _BUSINESS_ID;
		
		private EntitySet<BRIDGE> _BRIDGEs;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnPROD_SUBTOTALChanging(decimal value);
    partial void OnPROD_SUBTOTALChanged();
    partial void OnSERVICES_SUBTOTALChanging(decimal value);
    partial void OnSERVICES_SUBTOTALChanged();
    partial void OnTAXChanging(decimal value);
    partial void OnTAXChanged();
    partial void OnTOTALChanging(decimal value);
    partial void OnTOTALChanged();
    partial void OnDISCOUNTChanging(decimal value);
    partial void OnDISCOUNTChanged();
    partial void OnTOTAL_PAIDChanging(decimal value);
    partial void OnTOTAL_PAIDChanged();
    partial void OnBUSINESS_IDChanging(int value);
    partial void OnBUSINESS_IDChanged();
    #endregion
		
		public CART()
		{
			this._BRIDGEs = new EntitySet<BRIDGE>(new Action<BRIDGE>(this.attach_BRIDGEs), new Action<BRIDGE>(this.detach_BRIDGEs));
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[USER ID]", Storage="_USER_ID", DbType="Int NOT NULL")]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PROD SUBTOTAL]", Storage="_PROD_SUBTOTAL", DbType="Money NOT NULL")]
		public decimal PROD_SUBTOTAL
		{
			get
			{
				return this._PROD_SUBTOTAL;
			}
			set
			{
				if ((this._PROD_SUBTOTAL != value))
				{
					this.OnPROD_SUBTOTALChanging(value);
					this.SendPropertyChanging();
					this._PROD_SUBTOTAL = value;
					this.SendPropertyChanged("PROD_SUBTOTAL");
					this.OnPROD_SUBTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[SERVICES SUBTOTAL]", Storage="_SERVICES_SUBTOTAL", DbType="Money NOT NULL")]
		public decimal SERVICES_SUBTOTAL
		{
			get
			{
				return this._SERVICES_SUBTOTAL;
			}
			set
			{
				if ((this._SERVICES_SUBTOTAL != value))
				{
					this.OnSERVICES_SUBTOTALChanging(value);
					this.SendPropertyChanging();
					this._SERVICES_SUBTOTAL = value;
					this.SendPropertyChanged("SERVICES_SUBTOTAL");
					this.OnSERVICES_SUBTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAX", DbType="Money NOT NULL")]
		public decimal TAX
		{
			get
			{
				return this._TAX;
			}
			set
			{
				if ((this._TAX != value))
				{
					this.OnTAXChanging(value);
					this.SendPropertyChanging();
					this._TAX = value;
					this.SendPropertyChanged("TAX");
					this.OnTAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Money NOT NULL")]
		public decimal TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISCOUNT", DbType="Money NOT NULL")]
		public decimal DISCOUNT
		{
			get
			{
				return this._DISCOUNT;
			}
			set
			{
				if ((this._DISCOUNT != value))
				{
					this.OnDISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._DISCOUNT = value;
					this.SendPropertyChanged("DISCOUNT");
					this.OnDISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[TOTAL PAID]", Storage="_TOTAL_PAID", DbType="Money NOT NULL")]
		public decimal TOTAL_PAID
		{
			get
			{
				return this._TOTAL_PAID;
			}
			set
			{
				if ((this._TOTAL_PAID != value))
				{
					this.OnTOTAL_PAIDChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PAID = value;
					this.SendPropertyChanged("TOTAL_PAID");
					this.OnTOTAL_PAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BUSINESS ID]", Storage="_BUSINESS_ID", DbType="Int NOT NULL")]
		public int BUSINESS_ID
		{
			get
			{
				return this._BUSINESS_ID;
			}
			set
			{
				if ((this._BUSINESS_ID != value))
				{
					this.OnBUSINESS_IDChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_ID = value;
					this.SendPropertyChanged("BUSINESS_ID");
					this.OnBUSINESS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CART_BRIDGE", Storage="_BRIDGEs", ThisKey="ID", OtherKey="CART_ID")]
		public EntitySet<BRIDGE> BRIDGEs
		{
			get
			{
				return this._BRIDGEs;
			}
			set
			{
				this._BRIDGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_CART", Storage="_USER", ThisKey="USER_ID", OtherKey="ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.CARTs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.CARTs.Add(this);
						this._USER_ID = value.ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BRIDGEs(BRIDGE entity)
		{
			this.SendPropertyChanging();
			entity.CART = this;
		}
		
		private void detach_BRIDGEs(BRIDGE entity)
		{
			this.SendPropertyChanging();
			entity.CART = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVOICE")]
	public partial class INVOICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BUSINESS_ID;
		
		private int _USER_ID;
		
		private decimal _PROD_SUBTOTAL;
		
		private decimal _TAX;
		
		private decimal _SERVICES_SUBTOTAL;
		
		private decimal _TOTAL;
		
		private decimal _DISCOUNT;
		
		private decimal _TOTAL_PAID;
		
		private System.DateTime _DATE_TIME;
		
		private string _PAYMENT_METHOD;
		
		private EntitySet<ORDERITEM> _ORDERITEMs;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBUSINESS_IDChanging(int value);
    partial void OnBUSINESS_IDChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnPROD_SUBTOTALChanging(decimal value);
    partial void OnPROD_SUBTOTALChanged();
    partial void OnTAXChanging(decimal value);
    partial void OnTAXChanged();
    partial void OnSERVICES_SUBTOTALChanging(decimal value);
    partial void OnSERVICES_SUBTOTALChanged();
    partial void OnTOTALChanging(decimal value);
    partial void OnTOTALChanged();
    partial void OnDISCOUNTChanging(decimal value);
    partial void OnDISCOUNTChanged();
    partial void OnTOTAL_PAIDChanging(decimal value);
    partial void OnTOTAL_PAIDChanged();
    partial void OnDATE_TIMEChanging(System.DateTime value);
    partial void OnDATE_TIMEChanged();
    partial void OnPAYMENT_METHODChanging(string value);
    partial void OnPAYMENT_METHODChanged();
    #endregion
		
		public INVOICE()
		{
			this._ORDERITEMs = new EntitySet<ORDERITEM>(new Action<ORDERITEM>(this.attach_ORDERITEMs), new Action<ORDERITEM>(this.detach_ORDERITEMs));
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BUSINESS ID]", Storage="_BUSINESS_ID", DbType="Int NOT NULL")]
		public int BUSINESS_ID
		{
			get
			{
				return this._BUSINESS_ID;
			}
			set
			{
				if ((this._BUSINESS_ID != value))
				{
					this.OnBUSINESS_IDChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_ID = value;
					this.SendPropertyChanged("BUSINESS_ID");
					this.OnBUSINESS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[USER ID]", Storage="_USER_ID", DbType="Int NOT NULL")]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PROD SUBTOTAL]", Storage="_PROD_SUBTOTAL", DbType="Money NOT NULL")]
		public decimal PROD_SUBTOTAL
		{
			get
			{
				return this._PROD_SUBTOTAL;
			}
			set
			{
				if ((this._PROD_SUBTOTAL != value))
				{
					this.OnPROD_SUBTOTALChanging(value);
					this.SendPropertyChanging();
					this._PROD_SUBTOTAL = value;
					this.SendPropertyChanged("PROD_SUBTOTAL");
					this.OnPROD_SUBTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAX", DbType="Money NOT NULL")]
		public decimal TAX
		{
			get
			{
				return this._TAX;
			}
			set
			{
				if ((this._TAX != value))
				{
					this.OnTAXChanging(value);
					this.SendPropertyChanging();
					this._TAX = value;
					this.SendPropertyChanged("TAX");
					this.OnTAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[SERVICES SUBTOTAL]", Storage="_SERVICES_SUBTOTAL", DbType="Money NOT NULL")]
		public decimal SERVICES_SUBTOTAL
		{
			get
			{
				return this._SERVICES_SUBTOTAL;
			}
			set
			{
				if ((this._SERVICES_SUBTOTAL != value))
				{
					this.OnSERVICES_SUBTOTALChanging(value);
					this.SendPropertyChanging();
					this._SERVICES_SUBTOTAL = value;
					this.SendPropertyChanged("SERVICES_SUBTOTAL");
					this.OnSERVICES_SUBTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Money NOT NULL")]
		public decimal TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISCOUNT", DbType="Money NOT NULL")]
		public decimal DISCOUNT
		{
			get
			{
				return this._DISCOUNT;
			}
			set
			{
				if ((this._DISCOUNT != value))
				{
					this.OnDISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._DISCOUNT = value;
					this.SendPropertyChanged("DISCOUNT");
					this.OnDISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[TOTAL PAID]", Storage="_TOTAL_PAID", DbType="Money NOT NULL")]
		public decimal TOTAL_PAID
		{
			get
			{
				return this._TOTAL_PAID;
			}
			set
			{
				if ((this._TOTAL_PAID != value))
				{
					this.OnTOTAL_PAIDChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PAID = value;
					this.SendPropertyChanged("TOTAL_PAID");
					this.OnTOTAL_PAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[DATE TIME]", Storage="_DATE_TIME", DbType="DateTime NOT NULL")]
		public System.DateTime DATE_TIME
		{
			get
			{
				return this._DATE_TIME;
			}
			set
			{
				if ((this._DATE_TIME != value))
				{
					this.OnDATE_TIMEChanging(value);
					this.SendPropertyChanging();
					this._DATE_TIME = value;
					this.SendPropertyChanged("DATE_TIME");
					this.OnDATE_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PAYMENT METHOD]", Storage="_PAYMENT_METHOD", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PAYMENT_METHOD
		{
			get
			{
				return this._PAYMENT_METHOD;
			}
			set
			{
				if ((this._PAYMENT_METHOD != value))
				{
					this.OnPAYMENT_METHODChanging(value);
					this.SendPropertyChanging();
					this._PAYMENT_METHOD = value;
					this.SendPropertyChanged("PAYMENT_METHOD");
					this.OnPAYMENT_METHODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_ORDERITEM", Storage="_ORDERITEMs", ThisKey="ID", OtherKey="INVOICE_ID")]
		public EntitySet<ORDERITEM> ORDERITEMs
		{
			get
			{
				return this._ORDERITEMs;
			}
			set
			{
				this._ORDERITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_INVOICE", Storage="_USER", ThisKey="USER_ID", OtherKey="ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.INVOICEs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.INVOICEs.Add(this);
						this._USER_ID = value.ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERITEMs(ORDERITEM entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = this;
		}
		
		private void detach_ORDERITEMs(ORDERITEM entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[OPERATING HOURS]")]
	public partial class OPERATING_HOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BUSINESS_ID;
		
		private string _DAY;
		
		private System.Nullable<System.TimeSpan> _OPEN_TIME;
		
		private System.Nullable<System.TimeSpan> _CLOSE_TIME;
		
		private EntityRef<BUSINESS> _BUSINESS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBUSINESS_IDChanging(int value);
    partial void OnBUSINESS_IDChanged();
    partial void OnDAYChanging(string value);
    partial void OnDAYChanged();
    partial void OnOPEN_TIMEChanging(System.Nullable<System.TimeSpan> value);
    partial void OnOPEN_TIMEChanged();
    partial void OnCLOSE_TIMEChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCLOSE_TIMEChanged();
    #endregion
		
		public OPERATING_HOUR()
		{
			this._BUSINESS = default(EntityRef<BUSINESS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BUSINESS ID]", Storage="_BUSINESS_ID", DbType="Int NOT NULL")]
		public int BUSINESS_ID
		{
			get
			{
				return this._BUSINESS_ID;
			}
			set
			{
				if ((this._BUSINESS_ID != value))
				{
					this.OnBUSINESS_IDChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_ID = value;
					this.SendPropertyChanged("BUSINESS_ID");
					this.OnBUSINESS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAY", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string DAY
		{
			get
			{
				return this._DAY;
			}
			set
			{
				if ((this._DAY != value))
				{
					this.OnDAYChanging(value);
					this.SendPropertyChanging();
					this._DAY = value;
					this.SendPropertyChanged("DAY");
					this.OnDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[OPEN TIME]", Storage="_OPEN_TIME", DbType="Time")]
		public System.Nullable<System.TimeSpan> OPEN_TIME
		{
			get
			{
				return this._OPEN_TIME;
			}
			set
			{
				if ((this._OPEN_TIME != value))
				{
					this.OnOPEN_TIMEChanging(value);
					this.SendPropertyChanging();
					this._OPEN_TIME = value;
					this.SendPropertyChanged("OPEN_TIME");
					this.OnOPEN_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CLOSE TIME]", Storage="_CLOSE_TIME", DbType="Time")]
		public System.Nullable<System.TimeSpan> CLOSE_TIME
		{
			get
			{
				return this._CLOSE_TIME;
			}
			set
			{
				if ((this._CLOSE_TIME != value))
				{
					this.OnCLOSE_TIMEChanging(value);
					this.SendPropertyChanging();
					this._CLOSE_TIME = value;
					this.SendPropertyChanged("CLOSE_TIME");
					this.OnCLOSE_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUSINESS_OPERATING_HOUR", Storage="_BUSINESS", ThisKey="BUSINESS_ID", OtherKey="ID", IsForeignKey=true)]
		public BUSINESS BUSINESS
		{
			get
			{
				return this._BUSINESS.Entity;
			}
			set
			{
				BUSINESS previousValue = this._BUSINESS.Entity;
				if (((previousValue != value) 
							|| (this._BUSINESS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUSINESS.Entity = null;
						previousValue.OPERATING_HOURs.Remove(this);
					}
					this._BUSINESS.Entity = value;
					if ((value != null))
					{
						value.OPERATING_HOURs.Add(this);
						this._BUSINESS_ID = value.ID;
					}
					else
					{
						this._BUSINESS_ID = default(int);
					}
					this.SendPropertyChanged("BUSINESS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BUSINESS_ID;
		
		private string _NAME;
		
		private string _DESCRIPTION;
		
		private decimal _PRICE;
		
		private string _ALLERGIES;
		
		private string _CATEGORY;
		
		private bool _ISACTIVE;
		
		private EntitySet<BRIDGE> _BRIDGEs;
		
		private EntityRef<BUSINESS> _BUSINESS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBUSINESS_IDChanging(int value);
    partial void OnBUSINESS_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnPRICEChanging(decimal value);
    partial void OnPRICEChanged();
    partial void OnALLERGIESChanging(string value);
    partial void OnALLERGIESChanged();
    partial void OnCATEGORYChanging(string value);
    partial void OnCATEGORYChanged();
    partial void OnISACTIVEChanging(bool value);
    partial void OnISACTIVEChanged();
    #endregion
		
		public PRODUCT()
		{
			this._BRIDGEs = new EntitySet<BRIDGE>(new Action<BRIDGE>(this.attach_BRIDGEs), new Action<BRIDGE>(this.detach_BRIDGEs));
			this._BUSINESS = default(EntityRef<BUSINESS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BUSINESS ID]", Storage="_BUSINESS_ID", DbType="Int NOT NULL")]
		public int BUSINESS_ID
		{
			get
			{
				return this._BUSINESS_ID;
			}
			set
			{
				if ((this._BUSINESS_ID != value))
				{
					this.OnBUSINESS_IDChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_ID = value;
					this.SendPropertyChanged("BUSINESS_ID");
					this.OnBUSINESS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Money NOT NULL")]
		public decimal PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLERGIES", DbType="VarChar(50)")]
		public string ALLERGIES
		{
			get
			{
				return this._ALLERGIES;
			}
			set
			{
				if ((this._ALLERGIES != value))
				{
					this.OnALLERGIESChanging(value);
					this.SendPropertyChanging();
					this._ALLERGIES = value;
					this.SendPropertyChanged("ALLERGIES");
					this.OnALLERGIESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CATEGORY
		{
			get
			{
				return this._CATEGORY;
			}
			set
			{
				if ((this._CATEGORY != value))
				{
					this.OnCATEGORYChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY = value;
					this.SendPropertyChanged("CATEGORY");
					this.OnCATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISACTIVE", DbType="Bit NOT NULL")]
		public bool ISACTIVE
		{
			get
			{
				return this._ISACTIVE;
			}
			set
			{
				if ((this._ISACTIVE != value))
				{
					this.OnISACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ISACTIVE = value;
					this.SendPropertyChanged("ISACTIVE");
					this.OnISACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_BRIDGE", Storage="_BRIDGEs", ThisKey="ID", OtherKey="PRODUCT_ID")]
		public EntitySet<BRIDGE> BRIDGEs
		{
			get
			{
				return this._BRIDGEs;
			}
			set
			{
				this._BRIDGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUSINESS_PRODUCT", Storage="_BUSINESS", ThisKey="BUSINESS_ID", OtherKey="ID", IsForeignKey=true)]
		public BUSINESS BUSINESS
		{
			get
			{
				return this._BUSINESS.Entity;
			}
			set
			{
				BUSINESS previousValue = this._BUSINESS.Entity;
				if (((previousValue != value) 
							|| (this._BUSINESS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUSINESS.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._BUSINESS.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._BUSINESS_ID = value.ID;
					}
					else
					{
						this._BUSINESS_ID = default(int);
					}
					this.SendPropertyChanged("BUSINESS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BRIDGEs(BRIDGE entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_BRIDGEs(BRIDGE entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DISCOUNT")]
	public partial class DISCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE;
		
		private int _PRODUCT_ID;
		
		private decimal _NEW_PRICE;
		
		private bool _IS_ACTIVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnPRODUCT_IDChanging(int value);
    partial void OnPRODUCT_IDChanged();
    partial void OnNEW_PRICEChanging(decimal value);
    partial void OnNEW_PRICEChanged();
    partial void OnIS_ACTIVEChanging(bool value);
    partial void OnIS_ACTIVEChanged();
    #endregion
		
		public DISCOUNT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PRODUCT ID]", Storage="_PRODUCT_ID", DbType="Int NOT NULL")]
		public int PRODUCT_ID
		{
			get
			{
				return this._PRODUCT_ID;
			}
			set
			{
				if ((this._PRODUCT_ID != value))
				{
					this.OnPRODUCT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ID = value;
					this.SendPropertyChanged("PRODUCT_ID");
					this.OnPRODUCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[NEW PRICE]", Storage="_NEW_PRICE", DbType="Money NOT NULL")]
		public decimal NEW_PRICE
		{
			get
			{
				return this._NEW_PRICE;
			}
			set
			{
				if ((this._NEW_PRICE != value))
				{
					this.OnNEW_PRICEChanging(value);
					this.SendPropertyChanging();
					this._NEW_PRICE = value;
					this.SendPropertyChanged("NEW_PRICE");
					this.OnNEW_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[IS ACTIVE]", Storage="_IS_ACTIVE", DbType="Bit NOT NULL")]
		public bool IS_ACTIVE
		{
			get
			{
				return this._IS_ACTIVE;
			}
			set
			{
				if ((this._IS_ACTIVE != value))
				{
					this.OnIS_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._IS_ACTIVE = value;
					this.SendPropertyChanged("IS_ACTIVE");
					this.OnIS_ACTIVEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERITEM")]
	public partial class ORDERITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _INVOICE_ID;
		
		private string _PRODUCT_NAME;
		
		private int _PRODUCT_QUANTITY;
		
		private decimal _PRODUCT_PRICE;
		
		private EntityRef<INVOICE> _INVOICE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnINVOICE_IDChanging(int value);
    partial void OnINVOICE_IDChanged();
    partial void OnPRODUCT_NAMEChanging(string value);
    partial void OnPRODUCT_NAMEChanged();
    partial void OnPRODUCT_QUANTITYChanging(int value);
    partial void OnPRODUCT_QUANTITYChanged();
    partial void OnPRODUCT_PRICEChanging(decimal value);
    partial void OnPRODUCT_PRICEChanged();
    #endregion
		
		public ORDERITEM()
		{
			this._INVOICE = default(EntityRef<INVOICE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[INVOICE ID]", Storage="_INVOICE_ID", DbType="Int NOT NULL")]
		public int INVOICE_ID
		{
			get
			{
				return this._INVOICE_ID;
			}
			set
			{
				if ((this._INVOICE_ID != value))
				{
					this.OnINVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_ID = value;
					this.SendPropertyChanged("INVOICE_ID");
					this.OnINVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PRODUCT NAME]", Storage="_PRODUCT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRODUCT_NAME
		{
			get
			{
				return this._PRODUCT_NAME;
			}
			set
			{
				if ((this._PRODUCT_NAME != value))
				{
					this.OnPRODUCT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_NAME = value;
					this.SendPropertyChanged("PRODUCT_NAME");
					this.OnPRODUCT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PRODUCT QUANTITY]", Storage="_PRODUCT_QUANTITY", DbType="Int NOT NULL")]
		public int PRODUCT_QUANTITY
		{
			get
			{
				return this._PRODUCT_QUANTITY;
			}
			set
			{
				if ((this._PRODUCT_QUANTITY != value))
				{
					this.OnPRODUCT_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_QUANTITY = value;
					this.SendPropertyChanged("PRODUCT_QUANTITY");
					this.OnPRODUCT_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PRODUCT PRICE]", Storage="_PRODUCT_PRICE", DbType="Money NOT NULL")]
		public decimal PRODUCT_PRICE
		{
			get
			{
				return this._PRODUCT_PRICE;
			}
			set
			{
				if ((this._PRODUCT_PRICE != value))
				{
					this.OnPRODUCT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_PRICE = value;
					this.SendPropertyChanged("PRODUCT_PRICE");
					this.OnPRODUCT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_ORDERITEM", Storage="_INVOICE", ThisKey="INVOICE_ID", OtherKey="ID", IsForeignKey=true)]
		public INVOICE INVOICE
		{
			get
			{
				return this._INVOICE.Entity;
			}
			set
			{
				INVOICE previousValue = this._INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INVOICE.Entity = null;
						previousValue.ORDERITEMs.Remove(this);
					}
					this._INVOICE.Entity = value;
					if ((value != null))
					{
						value.ORDERITEMs.Add(this);
						this._INVOICE_ID = value.ID;
					}
					else
					{
						this._INVOICE_ID = default(int);
					}
					this.SendPropertyChanged("INVOICE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
